name: Release

on:
  release:
    types: [created]

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "23"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update package versions
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          # Update app versions (apps are what we publish)
          cd apps/mcp && pnpm pkg set version=$VERSION && cd ../..
          cd apps/cli && pnpm pkg set version=$VERSION && cd ../..

      - name: Remove workspace dependencies
        run: |
          # Remove workspace devDependencies that are bundled
          cd apps/mcp
          pnpm pkg delete devDependencies.@spec-mcp/core
          pnpm pkg delete devDependencies.@spec-mcp/dashboard
          pnpm pkg delete devDependencies.@spec-mcp/schemas
          pnpm pkg delete devDependencies.@spec-mcp/tsconfig
          pnpm pkg delete devDependencies.@spec-mcp/utils
          cd ../cli
          pnpm pkg delete devDependencies.@spec-mcp/core
          pnpm pkg delete devDependencies.@spec-mcp/dashboard
          pnpm pkg delete devDependencies.@spec-mcp/schemas
          pnpm pkg delete devDependencies.@spec-mcp/tsconfig
          pnpm pkg delete devDependencies.@spec-mcp/utils

      - name: Publish spec-mcp to npm
        run: cd apps/mcp && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @spec-mcp/cli to npm
        run: cd apps/cli && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-github:
    name: Publish GitHub Release Assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "23"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Remove workspace dependencies
        run: |
          # Remove workspace devDependencies that are bundled
          cd apps/mcp
          pnpm pkg delete devDependencies.@spec-mcp/core
          pnpm pkg delete devDependencies.@spec-mcp/dashboard
          pnpm pkg delete devDependencies.@spec-mcp/schemas
          pnpm pkg delete devDependencies.@spec-mcp/tsconfig
          pnpm pkg delete devDependencies.@spec-mcp/utils
          cd ../cli
          pnpm pkg delete devDependencies.@spec-mcp/core
          pnpm pkg delete devDependencies.@spec-mcp/dashboard
          pnpm pkg delete devDependencies.@spec-mcp/schemas
          pnpm pkg delete devDependencies.@spec-mcp/tsconfig
          pnpm pkg delete devDependencies.@spec-mcp/utils

      - name: Create release archives
        run: |
          mkdir -p release-assets
          cd apps/mcp
          pnpm pack
          mv spec-mcp-*.tgz ../../release-assets/
          cd ../cli
          pnpm pack
          mv spec-mcp-cli-*.tgz ../../release-assets/

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
