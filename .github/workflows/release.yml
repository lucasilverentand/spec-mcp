name: Release

on:
  release:
    types: [created]

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "23"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update package versions
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          # Update all workspace package versions
          for pkg in packages/*/package.json; do
            if [ -f "$pkg" ]; then
              npm pkg set version=$VERSION --prefix=$(dirname "$pkg")
            fi
          done

      - name: Convert workspace dependencies
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          # Replace workspace:* with actual versions in server
          cd packages/server
          jq --arg ver "$VERSION" '.dependencies |= with_entries(
            if .value == "workspace:*" then .value = "^" + $ver else . end
          )' package.json > package.json.tmp && mv package.json.tmp package.json
          cd ../cli
          jq --arg ver "$VERSION" '.dependencies |= with_entries(
            if .value == "workspace:*" then .value = "^" + $ver else . end
          )' package.json > package.json.tmp && mv package.json.tmp package.json

      - name: Publish @spec-mcp/core to npm
        run: cd packages/core && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @spec-mcp/schemas to npm
        run: cd packages/schemas && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @spec-mcp/utils to npm
        run: cd packages/utils && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @spec-mcp/server to npm
        run: cd packages/server && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @spec-mcp/cli to npm
        run: cd packages/cli && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-github:
    name: Publish GitHub Release Assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "23"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Create release archives
        run: |
          mkdir -p release-assets
          cd packages/server
          npm pack
          mv spec-mcp-server-*.tgz ../../release-assets/
          cd ../cli
          npm pack
          mv spec-mcp-cli-*.tgz ../../release-assets/

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
