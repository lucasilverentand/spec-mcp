{
	"type": "constitution",
	"number": 1,
	"slug": "engineering-principles",
	"name": "Engineering Principles",
	"description": "Core engineering principles governing code quality, architecture decisions, testing standards, and development practices across all projects.",
	"created_at": "2025-10-06T01:24:35.208Z",
	"updated_at": "2025-10-06T01:24:35.208Z",
	"articles": [
		{
			"id": "art-001",
			"title": "Code Quality First",
			"principle": "All code must meet high quality standards including readability, maintainability, and adherence to established patterns.",
			"rationale": "High quality code reduces bugs, improves collaboration, and makes maintenance easier over time.",
			"examples": [],
			"exceptions": [],
			"status": "active"
		},
		{
			"id": "art-002",
			"title": "Test-Driven Development",
			"principle": "All features must include comprehensive tests with unit tests for business logic and integration tests for critical paths.",
			"rationale": "Tests catch bugs early, serve as documentation, and enable confident refactoring.",
			"examples": [],
			"exceptions": [],
			"status": "active"
		},
		{
			"id": "art-003",
			"title": "Security by Default",
			"principle": "Security must be considered from the beginning of design with input validation, authentication for sensitive operations, and encryption.",
			"rationale": "Proactive security prevents costly breaches and protects user data.",
			"examples": [],
			"exceptions": [],
			"status": "active"
		},
		{
			"id": "art-004",
			"title": "Documentation Standards",
			"principle": "Code must be self-documenting with clear naming, inline comments for complex logic, and comprehensive API documentation.",
			"rationale": "Good documentation reduces onboarding time and prevents knowledge silos.",
			"examples": [],
			"exceptions": [],
			"status": "active"
		}
	]
}
