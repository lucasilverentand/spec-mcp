/**
 * EXAMPLE MIGRATION - This file is disabled (not imported by index.ts)
 *
 * This is an example showing how to create a migration.
 * To use this as a template:
 * 1. Copy this file and rename it (e.g., migrate-1.1.0.ts)
 * 2. Update the version, description, and implement the migrate function
 * 3. Import and add it to the migrations array in index.ts
 */

import type { Migration } from "../types";
import { FileManager } from "../../storage/file-manager";

/**
 * Example migration that would add a new field to all requirements
 */
export const exampleMigration: Migration = {
	// The version this migration upgrades to (must be valid semver)
	version: "1.1.0",

	// Human-readable description of what this migration does
	description: "Add 'tags' field to all requirement specifications",

	// The migration function that performs the actual changes
	async migrate(specsPath: string): Promise<void> {
		// Create a FileManager to access the specs folder
		const fileManager = new FileManager(specsPath);

		// Example: Read all requirements and add a new field
		// const requirementFiles = await fileManager.listFiles("requirements");
		//
		// for (const slug of requirementFiles) {
		//   const requirement = await fileManager.readYaml(`requirements/${slug}.yaml`);
		//
		//   // Add new field if it doesn't exist
		//   if (!requirement.tags) {
		//     requirement.tags = [];
		//   }
		//
		//   // Write back the updated requirement
		//   await fileManager.writeYaml(`requirements/${slug}.yaml`, requirement);
		// }

		// For this example, we just log that the migration ran
		console.log("Example migration executed for specs at:", specsPath);
	},
};
